<snippet>
  <description>CartoDB â€“ View</description>
  <tabTrigger>cdb</tabTrigger>
  <scope>source.js</scope>
  <content><![CDATA[
var CoreView = require('backbone/core-view');
var _ = require('underscore');

var REQUIRED_OPTS = [
  'template',
  'runAction',
  'renderOpts',
  'loadingTitle',
  'modalModel'
];

module.exports = CoreView.extend({

  events: {
    'click .js-foo': '_fooHandler'
  },

  initialize: function (opts) {
    _.each(REQUIRED_OPTS, function (item) {
      if (opts[item] === undefined) throw new Error(item + ' is required');
      this['_' + item] = opts[item];
    }, this);

    // For internal state
    this.model = new cdb.core.Model({
      state: true
    });

    this._initBinds();
  },

  render: function () {
    this.clearSubViews();
    this.\$el.empty();
    this._initViews();
    return this;
  },

  _initBinds: function () {
    this.listenTo(this.otherModel, 'change:source', this);
    this.add_related_model(this.otherModel);
  },

  _initViews: function () {
    this._view = createViewFromOptions(someOptions);
    this.\$el.append(this._view.render().\$el);
    this.addView(this._view);
  },

  _fooHandler: function () {

  },

  clean: function () {
    // Other ops here
    cdb.core.View.prototype.clean.apply(this, arguments);
  }
});

]]></content>
</snippet>
